using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CodilitySolutions
{
    class PrefixSum
    {
        public static int[] A = { 2, 3, 7, 5, 1, 3, 9 };
        public static int k = 4;
        public static int m = 6;
        
        private int[] CountPrefixSum(int[] a)
        {
            int n = a.Length;

            int[] p = new int[n + 1];

            for (int i = 1; i <= n; i++)
            {
                p[i] = p[i - 1] + a[i - 1];
            }

            return p;
        }

        private int countTotal(int[] p, int x, int y)
        {
            return p[y + 1] - p[x];
        }

        public int mushrooms(int[] a, int k, int m)
        {
            int n = a.Length;
            int result = 0;
            int leftPos = 0;
            int rightPos = 0;

            int[] pref = CountPrefixSum(a);

            Console.WriteLine("M:{0}  K:{1}", m, k);
            Console.WriteLine("Executing 0 to " + (Math.Min(m, k) + 1));
            for (int p = 0; p < Math.Min(m, k) + 1; p++)
            {
                leftPos = k - p;
                Console.WriteLine("LeftPos:" + leftPos);
                rightPos = Math.Min(n - 1, Math.Max(k, k + m - 2 * p));
                Console.WriteLine("RightPos:" + rightPos);
                result = Math.Max(result, countTotal(pref, leftPos, rightPos));
                Console.WriteLine("Result:" + result);
            }

            Console.WriteLine("-------------------------");
            Console.WriteLine("Executing 0 to " + Math.Min(m + 1, n - k));
            for (int p = 0; p < Math.Min(m + 1, n - k); p++)
            {
                leftPos = k + p;
                Console.WriteLine("LeftPos:" + leftPos);
                rightPos = Math.Max(0, Math.Min(k, k - (m - 2 * p)));
                Console.WriteLine("RightPos:" + rightPos);
                result = Math.Max(result, countTotal(pref, leftPos, rightPos));
                Console.WriteLine("Result:" + result);
            }

            return result;
        }

       static void Main(string[] args)
       {
        PrefixSum sum = new PrefixSum();
           
        sum.mushrooms(PrefixSum.A, PrefixSum.k, PrefixSum.m);
            Console.Read();
       }
    }

}
